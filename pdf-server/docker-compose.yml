version: '3.8'

services:
  # Gotenberg service for file conversion
  gotenberg:
    image: gotenberg/gotenberg:8
    ports:
      - "3000:3000"
    command:
      - "gotenberg"
      - "--api-port=3000"
      - "--api-timeout=60s"                     # Reduced timeout
      - "--log-level=warn"                      # Reduced logging for performance
      - "--chromium-disable-web-security=true"
      - "--chromium-disable-javascript=false"
      - "--libreoffice-auto-start=true"
      - "--chromium-allow-list=file:///,http://localhost"
      - "--chromium-ignore-certificate-errors=true"
      - "--chromium-cache-mode=memory"          # Use memory cache for better performance
      - "--chromium-queue-size=10"              # Increased queue size for parallel processing
      - "--pdf-engines-metrics=false"           # Disable metrics for performance
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:3000/health"]
      interval: 15s                           # More frequent health checks
      timeout: 5s                             # Reduced timeout
      retries: 3
      start_period: 30s                       # Reduced startup time
    # Gotenberg needs resources for LibreOffice and Chromium
    deploy:
      resources:
        limits:
          memory: 1.5G                        # Increased memory limit
          cpus: '1.5'                         # Increased CPU limit
        reservations:
          memory: 768M                        # Increased memory reservation
          cpus: '0.75'                        # Increased CPU reservation

  # Our Python server for email processing and coordination
  pdf-server:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "5000:5000"
    environment:
      - DEBUG=false
      - PORT=5000
      - GOTENBERG_URL=http://gotenberg:3000
      - CACHE_DIR=/app/cache
      - LOG_LEVEL=WARNING          # Reduced logging for better performance
      - WORKERS=4                  # Set number of worker threads
    volumes:
      - pdf-cache:/app/cache       # Persistent cache volume
    restart: unless-stopped
    depends_on:
      gotenberg:
        condition: service_healthy
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:5000/health"]
      interval: 15s                # More frequent health checks
      timeout: 5s                  # Reduced timeout
      retries: 3
      start_period: 20s            # Reduced startup time
    # Optimized resources for better performance
    deploy:
      resources:
        limits:
          memory: 384M             # Increased memory for caching
          cpus: '0.8'              # Increased CPU allocation
        reservations:
          memory: 192M             # Increased memory reservation
          cpus: '0.4'              # Increased CPU reservation

networks:
  default:
    name: email2pdf-network

volumes:
  pdf-cache:
    # Persistent volume for PDF cache
